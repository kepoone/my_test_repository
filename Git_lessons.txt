Lesson_1
git config -l (показать ваш конфиг git для текущего пользователя)
git config --global user.name "Name LastName" (указывает ваше имя/фамилия в config файл)
git config --global user.email "email@email.com" (указывает ваш email в config файл)

Lesson_2
git init . (указываем рабочую область в текущей директории)
git add ./file1.txt (добавить в git file1.txt)
git reset ./file1.txt (отмена добавления в git файла file1.txt)
git commit -m "My initial commit? this is Version1.0" (сделать снимок)
git status (узнать статус)

Lesson_3
git checkout -- file.txt (отменяет изменения в последнем файле)
git log (история изменений, показывает номерх хэша, дату комита, кем сделн коммит)
git log -1 (последнее изменение)
git log -1 -p (последнее изменение детально)
git diff --staged (показывает какие изменения будут внесены перед коммитом)

Lesson_4
git clone http://.../.git (делает копию репозитория с гитхаб)
git push origin (загрузка в github)
git remote -v (показывает с какого удаленного репозитория выгружается и загружается файл)
git remote set-url origin url://.../.git (смена репозитория)

Lesson_5
git branch name_branch (создать указанную ветку)
git checkout name_branch (переключиться на указанную ветку)
git branch (посмотреть какие есть ветки)
git branch -d name_branch (удалить ветку если в нет изменений(комитов))
git branch -D name_branch (удалить ветку если даже есть изменения(комиты))
git checkout -b name_branch (создать и переключиться на указанную ветку)
git merge name_branch (соединяет ветку с указанной веткой)

Lesson_6
git commit --amend (редактировать описание последнего коммита)
git checkout номер_хэша (временно откатиться на комит который мы указали) Что бы вернуться к последнему коммиту, пишем "git checkout master"
git reset --hard HEAD~1 (откатиться на предыдущий коммит, где цифра(1) означает на сколько комитов назад откатиться (более поздние коммиты будут удалены))
git reset --soft HEAD~1 (перезапись предыдущего коммита, где цифра(1) означает на сколько комитов назад откатиться (более поздние коммиты будут удалены, но текущие данные буду сохранены))
git commit --amend (изменение наименовния последнего коммита)

Lesson_7
git push --set-upstream origin name_branch (создает в GitHub новую ветку, и добавляет её комит)
git push origin --delete name_branch (удаленно стирает с Gitub ветку (предварительно нужно удалить ветку локально, делать это надо с master-ветки))
